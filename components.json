{
  "schemas": {
    "RegRequest": {
      "type": "object",
      "required": ["name", "email", "password"],
      "properties": {
        "name": {
          "type": "string",
          "example": "Ivan Petrov"
        },
        "email": {
          "type": "string",
          "example": "ivan@example.com",
          "format": "email"
        },
        "password": {
          "type": "string",
          "example": "qwerty123"
        }
      }
    },
    "RegResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "64f49bbe12baf28b80b04763"
        },
        "name": {
          "type": "string",
          "example": "Ivan Petrov"
        },
        "email": {
          "type": "string",
          "example": "ivan@example.com",
          "format": "email"
        },
        "thema": {
          "type": "string",
          "example": "dark"
        },
        "photo": {
          "type": "string",
          "example": ""
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string",
          "example": "ivan@example.com",
          "format": "email"
        },
        "password": {
          "type": "string",
          "example": "qwerty123"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "7dh347fh4375fh45"
        },
        "email": {
          "type": "string",
          "example": "ivan@example.com",
          "format": "email"
        },
        "thema": {
          "type": "string",
          "example": "dark"
        },
        "photo": {
          "type": "string",
          "example": "https://en.gravatar.com/"
        }
      }
    },
    "CurUserRequest": {
      "type": "object",
      "required": [],
      "properties": {
        "email": {
          "type": "string",
          "example": "anton@example.com",
          "format": "email"
        }
      }
    },
    "CurUserResponse": {
      "type": "object",
      "required": [],
      "properties": {
        "email": {
          "type": "string",
          "example": "anton@example.com",
          "format": "email"
        }
      }
    },
    "UserThemeRequest": {
      "type": "object",
      "required": true,
      "properties": {
        "theme": {
          "type": "string",
          "example": "violet"
        }
      }
    },
    "UserThemeResponse": {
      "type": "object",
      "required": true,
      "properties": {
        "id": {
          "type": "string",
          "example": "userId"
        },
        "theme": {
          "type": "string",
          "example": "violet"
        }
      }
    },
    "UpdUserRequest": {
      "type": "object",
      "required": [],
      "properties": {
        "name": {
          "type": "string",
          "example": "Anton Ptuchkin"
        },
        "email": {
          "type": "string",
          "example": "anton@example.com",
          "format": "email"
        },
        "password": {
          "type": "string",
          "example": "777qwerty"
        },
        "theme": {
          "type": "string",
          "example": "dark"
        },
        "photo": {
          "type": "string",
          "example": "https://..."
        }
      }
    },
    "UpdUserResponse": {
      "type": "object",
      "required": [],
      "properties": {
        "name": {
          "type": "string",
          "example": "Anton Ptuchkin"
        },
        "email": {
          "type": "string",
          "example": "anton@example.com",
          "format": "email"
        },
        "password": {
          "type": "string",
          "example": "777qwerty"
        },
        "theme": {
          "type": "string",
          "example": "dark"
        },
        "photo": {
          "type": "string",
          "example": "https://..."
        }
      }
    },
    "UserLetterRequest": {
      "type": "object",
      "required": [],
      "properties": {
        "email": {
          "type": "string",
          "example": "anton@example.com",
          "format": "email"
        },
        "text": {
          "type": "string",
          "example": "Hello..."
        }
      }
    },
    "UserLetterResponse": {
      "type": "object",
      "required": [],
      "properties": {
        "email": {
          "type": "string",
          "example": "anton@example.com",
          "format": "email"
        }
      }
    },


    "BoardsUserResponse": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "My board"
        },
        "icon": {
          "type": "string"
        },
        "ownerId": {
          "type": "string",
          "example": "64ef7e4e6fe614f2171a12c2"
        },
        "id": {
          "type": "string",
          "example": "64ef796f093c81f56908b4b8"
        }
      }
    },
    "CreateBoardRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "My board"
        },
        "icon": {
          "type": "string",
          "example": "https://....."
        },
        "background": {
          "type": "string",
          "example": "https://....."
        }
      }
    },
    "BoardResponse": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "My board"
        },
        "icon": {
          "type": "string",
          "example": "https://....."
        },
        "background": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "backgroundId"
            },
            "desktopURL": {
              "type": "string",
              "example": "https://....."
            },
            "retinaURL": {
              "type": "string",
              "example": "https://....."
            },
            "tabletURL": {
              "type": "string",
              "example": "https://....."
            },
            "mobileURL": {
              "type": "string",
              "example": "https://....."
            },
            "previewURL": {
              "type": "string",
              "example": "https://....."
            }
          }
        },
        "ownerId": {
          "type": "string",
          "example": "64ef7e4e6fe614f2171a12c2"
        },
        "columns": {
          "type": "array",
          "example": "[ {} ]"
        }
      }
    },
    "putBoardRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "My board"
        },
        "icon": {
          "type": "string",
          "example": "https://....."
        },
        "background": {
          "type": "string",
          "example": "https://....."
        }
      }
    },
    "postColumnRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "New column - 1"
        }
      }
    },
    "ColumnResponse": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "My board"
        },

        "boardId": {
          "type": "string",
          "example": "64ef7e4e6fe614f2171a12c2"
        },
        "tasks": {
          "type": "array",
          "example": "[ ]"
        }
      }
    },


    "TaskRequest": {
      "type": "object",
      "properties": {
        "boardId": {
          "type": "string",
          "example": "boardId"
        },
        "columnId": {
          "type": "string",
          "example": "columnId"
        },
        "title": {
          "type": "string",
          "example": "Task Title"
        },
        "text": {
          "type": "string",
          "example": "Task Description"
        },
        "priority": {
          "type": "string",
          "example": "high"
        },
        "deadline": {
          "type": "string",
          "format": "date-time",
          "example": "2023-09-01T00:00:00Z"
        }
      }
    },
    "TaskResponse": {
      "type": "object",
      "properties": {
        "boardId": {
          "type": "string",
          "example": "boardId"
        },
        "columnId": {
          "type": "string",
          "example": "columnId"
        },
        "title": {
          "type": "string",
          "example": "Task Title"
        },
        "text": {
          "type": "string",
          "example": "Task Description"
        },
        "priority": {
          "type": "string",
          "example": "high"
        },
        "deadline": {
          "type": "string",
          "format": "date-time",
          "example": "2023-09-01T00:00:00Z"
        }
      }
    },


    "userIdParameters": {
      "in": "path",
      "name": "id",
      "required": "true",
      "schema": {
        "type": "string",
        "format": "ObjectId"
      },
      "description": "ID of the user to retrieve"
    },
    "boardIdParameters": {
      "in": "path",
      "name": "boardId",
      "required": "true",
      "schema": {
        "type": "string",
        "format": "ObjectId"
      },
      "description": "ID of the board to retrieve"
    },
    "columnIdParameters": {
      "in": "path",
      "name": "columnId",
      "required": true,
      "schema": {
        "type": "string",
        "format": "ObjectId"
      },
      "description": "ID of the column to retrieve"
    },
    "taskIdParameters": {
      "in": "path",
          "name": "taskId",
          "required": true,
          "schema": { "type": "string", "format": "ObjectId" },
          "description": "ID of the task"
    },
    "FilterPriorityParameter": {
      "type": "string",
      "enum": ["low", "medium", "high", "without"]
    },
    "Token": {
      "type": "string",
      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzaWQiOiIyOWI4ZmZmNS0xN2NjLTQ5NTYtOTViZC1jN2U3N2FkZDEwOWEiLCJpYXQiOjE2ODE4OTM3MzEsImV4cCI6MTAwMDAwMDE2ODE4OTM3MzJ9.hQpNKIj4SR7Gm9waUMn7hzwKQyqwKrniL_qSW7SxrjM"
    },
    "res204": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "No Content"
        }
      }
    },
    "error400": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Bad Request"
        }
      }
    },
    "error401": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Not authorized"
        }
      }
    },
    "error403": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Forbidden"
        }
      }
    },
    "error404": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Not Found"
        }
      }
    },
    "error409": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "conflict"
        }
      }
    }
  },
  "securitySchemes": {
    "Bearer": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  }
}
