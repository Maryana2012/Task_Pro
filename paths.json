{
  "/users/register": {
    "post": {
      "tags": ["Auth"],
      "summary": "Register a new user",
      "parameters": [],
      "requestBody": {
        "description": "This endpoint allows users to register by providing their name, email, and password in the request body.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RegRequest"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Created",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "$ref": "#/components/schemas/RegResponse"
                  },
                  "token": {
                    "$ref": "#/components/schemas/Token"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error400"
              },
              "examples": {
                "missing required fields": {
                  "description": "",
                  "value": {
                    "message": "missing required /***/ field"
                  }
                }
              }
            }
          }
        },
        "409": {
          "description": "Conflict",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error409"
              }, 
              "examples": {
                "email is already in use": {
                  "description": "",
                  "value": {
                    "message": "email in use"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/users/login": {
    "post": {
      "tags": ["Auth"],
      "summary": "Log in a user",
      "parameters": [],
      "requestBody": {
        "description": "Authenticate users by providing their email and password in the request body.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LoginRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Successful operation",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "user": {
                    "$ref": "#/components/schemas/LoginResponse"
                  },
                  "token": {
                    "$ref": "#/components/schemas/Token"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error400"
              },
              "examples": {
                "missing required fields": {
                  "description": "",
                  "value": {
                    "message": "missing required /***/ field"
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unathorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error401"
              },
              "examples": {
                "no user found for this email": {
                  "description": "",
                  "value": {
                    "message": "email or password wrong"
                  }
                },
                "wrong password": {
                  "description": "",
                  "value": {
                    "message": "email or password wrong"
                  }
                },
                "userAlreadyLoggedIn": {
                  "description": "",
                  "value": {
                    "message": "this user is logged"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/users/logout": {
    "post": {
      "tags": ["Auth"],
      "summary": "Log out a user",
      "description": "This endpoint allows a logged-in user to log out by sending a POST request. The user's authentication token needs to be included in the request headers for successful logout.",
      "parameters": [],
      "security": [{ "Bearer": [] }],

      "responses": {
        "204": {
          "description": "No Content",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/res204"
              }
            }
          }
        },
        "401": {
          "description": "Unathorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error401"
              }
            }
          }
        }
      }
    }
  },
  "/users/current": {
    "get": {
      "tags": ["Auth"],
      "summary": "Get current user information",
      "security": [
        {
          "Bearer": []
        }
      ],
      "requestBody": {
        "description": "Authenticate users by providing their email in the request body.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CurUserRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurUserResponse"
              }
            }
          }
        },
        "401": {
          "description": "Unathorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error401"
              }
            }
          }
        }
      }
    }
  },
  "/users/{id}/theme": {
    "patch": {
      "tags": ["Auth"],
      "summary": "Update user theme by ID",
      "parameters": [{ "$ref": "#/components/schemas/userIdParameters" }],
      "requestBody": {
        "description": "Update user theme. Allowed values: 'dark', 'light', 'violet'.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserThemeRequest"
            }
          }
        }
      },
      "security": [
        {
          "Bearer": []
        }
      ],
      "responses": {
        "200": {
          "description": "User theme updated successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserThemeResponse"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error400"
              }
            }
          }
        }
      }
    }
  },
  "/users/{id}/update": {
    "put": {
      "tags": ["Auth"],
      "summary": "Update user information",
      "parameters": [{ "$ref": "#/components/schemas/userIdParameters" }],
      "security": [{ "Bearer": [] }],
      "requestBody": {
        "description": "Provide updated user information in the request body.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdUserRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "$ref": "#/components/schemas/UpdUserResponse"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error400"
              }
            }
          }
        },
        "401": {
          "description": "Unathorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error401"
              },
              "examples": {
                "!user": {
                  "description": "",
                  "value": {
                    "message": "user with id not found"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/users/letter": {
    "post": {
      "tags": ["Auth"],
      "summary": "Send a letter",
      "security": [{ "Bearer": [] }],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserLetterRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "example": {
                "message": "Letter sent"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error400"
              }
            }
          }
        }
      }
    }
  },

  "/boards/": {
    "get": {
      "tags": ["Boards"],
      "summary": "Get all boards for the current user",
      "description": "This endpoint allows a logged-in user to retrieve all boards associated with their account. The user's authentication token needs to be included in the request headers for successful access.",
      "parameters": [],
      "security": [{ "Bearer": [] }],
      "responses": {
        "200": {
          "description": "Ок",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoardsUserResponse"
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid signature"
                  }
                }
              }
            }
          }
        }
      }
    },
    "post": {
      "tags": ["Boards"],
      "summary": "Create a new board",
      "description": "This endpoint allows a logged-in user to create a new board.",
      "parameters": [],
      "security": [{ "Bearer": [] }],
      "requestBody": {
        "description": "Provide the necessary information to create a new board.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateBoardRequest"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardResponse"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid signature"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/boards/{boardId}": {
    "get": {
      "tags": ["Boards"],
      "summary": "Get board by ID",
      "description": "This endpoint allows a user to retrieve information about a specific board by its ID.",
      "parameters": [{ "$ref": "#/components/schemas/boardIdParameters" }],
      "security": [{ "Bearer": [] }],
      "responses": {
        "200": {
          "description": "Ok",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardResponse"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid signature"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Not Found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "put": {
      "tags": ["Boards"],
      "summary": "Update board by ID",
      "description": "This endpoint allows a user to update information about a specific board by its ID.",
      "parameters": [{ "$ref": "#/components/schemas/boardIdParameters" }],
      "security": [{ "Bearer": [] }],
      "requestBody": {
        "description": "Provide the necessary information to create a new board.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/putBoardRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BoardResponse" }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error400"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error401"
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error404"
              }
            }
          }
        }
      }
    },
    "delete": {
      "tags": ["Boards"],
      "summary": "Delete board by ID",
      "description": "This endpoint allows a user to delete a specific board by its ID.",
      "parameters": [{ "$ref": "#/components/schemas/boardIdParameters" }],
      "security": [{ "Bearer": [] }],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string", "example": "Board deleted" }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error401"
              }
            }
          }
        },
        "403": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error403"
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error404"
              }
            }
          }
        }
      }
    }
  },
  "/boards/{boardId}/columns": {
    "post": {
      "tags": ["Boards"],
      "summary": "Add column to board",
      "description": "This endpoint allows a user to add a new column to a specific board.",
      "parameters": [{ "$ref": "#/components/schemas/boardIdParameters" }],
      "security": [{ "Bearer": [] }],
      "requestBody": {
        "description": "Provide the necessary information to create a new column.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/postColumnRequest"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Created",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ColumnResponse" }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error400"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error401"
              }
            }
          }
        },
        "409": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error409"
              }
            }
          }
        }
      }
    }
  },
  "/boards/{boardId}/background": {
    "get": {
      "tags": ["Boards"],
      "summary": "Get background previews for a board",
      "description": "This endpoint allows a user to retrieve background previews for a specific board.",
      "parameters": [{ "$ref": "#/components/schemas/boardIdParameters" }],
      "security": [{ "Bearer": [] }],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "backgroundId"
                    },
                    "previewURL": {
                      "type": "string",
                      "example": "https://..."
                    }
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error404"
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error"
        }
      }
    }
  },
  "/boards/{boardId}/columns/{columnId}": {
    "patch": {
      "tags": ["Boards"],
      "summary": "Update column by ID",
      "description": "This endpoint allows a user to update a column of a specific board by its ID.",
      "parameters": [
        { "$ref": "#/components/schemas/boardIdParameters" },
        { "$ref": "#/components/schemas/columnIdParameters" }
      ],
      "security": [{ "Bearer": [] }],
      "requestBody": {
        "description": "Provide the necessary information to update a new column.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/postColumnRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ColumnResponse" }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error400"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error401"
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error404"
              }
            }
          }
        }
      }
    },
    "delete": {
      "tags": ["Boards"],
      "summary": "Delete column by ID",
      "description": "This endpoint allows a user to delete a specific column of a board by its ID.",
      "parameters": [
        { "$ref": "#/components/schemas/boardIdParameters" },
        { "$ref": "#/components/schemas/columnIdParameters" }
      ],
      "security": [{ "Bearer": [] }],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string", "example": "Column deleted" }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error401"
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error404"
              }
            }
          }
        }
      }
    }
  },

  "/tasks": {
    "post": {
      "tags": ["Tasks"],
      "summary": "Add a new task",
      "description": "This endpoint allows a user to add a new task.",
      "security": [{ "Bearer": [] }],
      "requestBody": {
        "description": "Provide the necessary information to create a new task.",
        "required": true,
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/TaskRequest" }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Created",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaskResponse" }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error400"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error401"
              }
            }
          }
        }
      }
    }
  },
  "/tasks/{boardId}": {
    "get": {
      "tags": ["Tasks"],
      "summary": "Get all tasks",
      "description": "This endpoint allows a user to retrieve all tasks.",
      "parameters": [{ "$ref": "#/components/schemas/boardIdParameters" }],
      "security": [{ "Bearer": [] }],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/TaskResponse" }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error401"
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error404"
              }
            }
          }
        }
      }
    }
  },
  "/tasks/{taskId}": {
    "put": {
      "tags": ["Tasks"],
      "summary": "Update a task by ID",
      "description": "This endpoint allows a user to update a task by its ID.",
      "parameters": [{ "$ref": "#/components/schemas/taskIdParameters" }],
      "security": [{ "Bearer": [] }],
      "requestBody": {
        "description": "Provide updated task information in the request body.",
        "required": true,
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/TaskRequest" }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaskResponse" }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error400"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error401"
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error404"
              }
            }
          }
        }
      }
    },
    "delete": {
      "tags": ["Tasks"],
      "summary": "Delete a task by ID",
      "description": "This endpoint allows a user to delete a task by its ID.",
      "parameters": [{ "$ref": "#/components/schemas/taskIdParameters" }],
      "security": [{ "Bearer": [] }],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string", "example": "Task deleted" }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error404"
              }
            }
          }
        }
      }
    }
  },
  "/tasks/{taskId}/move": {
    "patch": {
      "tags": ["Tasks"],
      "summary": "Move a task by ID",
      "description": "This endpoint allows a user to move a task by its ID to a different column.",
      "parameters": [{ "$ref": "#/components/schemas/taskIdParameters" }],
      "security": [{ "Bearer": [] }],
      "requestBody": {
        "description": "Provide the ID of the new column in the request body.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "newColumnId": { "type": "string", "format": "ObjectId" }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaskResponse" }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error400"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error401"
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error404"
              }
            }
          }
        }
      }
    }
  },
  "/tasks/filter": {
    "get": {
      "tags": ["Tasks"],
      "summary": "Filter tasks by priority",
      "description": "This endpoint allows a user to filter tasks by priority. Available priorities: 'low', 'medium', 'high', 'without'",
      "security": [{ "Bearer": [] }],
      "parameters": [
        {
          "in": "query",
          "name": "priority",
          "schema": {
            "$ref": "#/components/schemas/FilterPriorityParameter"
          },
          "description": "Filter tasks by priority"
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/TaskResponse" }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error401"
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/error404"
              }
            }
          }
        }
      }
    }
  }
}
