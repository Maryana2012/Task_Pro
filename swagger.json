{
  "openapi": "3.0.1",
  "info": {
    "version": "15:11 26.08.23",
    "title": "Swagger",
    "description": "!!!  Тут може бути ваша реклама  !!!",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [{ "url": "http://localhost:8000" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "{ name, email, password }",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/UserResponse"
                    },
                    "token": {
                      "$ref": "#/components/schemas/Token"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error409"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "{ email, password }",
        "parameters": [],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/UserResponse"
                    },
                    "token": {
                      "$ref": "#/components/schemas/Token"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          }
        }
      }
    },
    "/users/update/:_id": {
      "put": {
        "tags": ["Auth"],
        "summary": "{ photo, name, email, password }",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": "true",
            "type": "string",
            "description": "user's _id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "token",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/res204"
                }
              }
            }
          },
          "401": {
            "description": "Unathorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Ivan Petrov"
          },
          "email": {
            "type": "string",
            "example": "ivan@example.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "example": "qwerty123"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "7dh347fh4375fh45"
          },
          "name": {
            "type": "string",
            "example": "Ivan Petrov"
          },
          "email": {
            "type": "string",
            "example": "ivan@example.com",
            "format": "email"
          },
          "thema": {
            "type": "string",
            "example": "dark"
          },
          "photo": {
            "type": "string",
            "example": "https://en.gravatar.com/"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "example": "ivan@example.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "example": "qwerty123"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "name": {
            "type": "string",
            "example": "Anton Ptuchkin"
          },
          "email": {
            "type": "string",
            "example": "anton@example.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "example": "777qwerty"
          },
          "thema": {
            "type": "string",
            "example": "light"
          },
          "photo": {
            "type": "string",
            "example": "https://en.gravatar.com/etsvsd"
          }
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Anton Ptuchkin"
          },
          "email": {
            "type": "string",
            "example": "anton@example.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "example": "777qwerty"
          },
          "thema": {
            "type": "string",
            "example": "light"
          },
          "photo": {
            "type": "string",
            "example": "https://en.gravatar.com/"
          }
        }
      },
      "Token": {
        "type": "string",
        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzaWQiOiIyOWI4ZmZmNS0xN2NjLTQ5NTYtOTViZC1jN2U3N2FkZDEwOWEiLCJpYXQiOjE2ODE4OTM3MzEsImV4cCI6MTAwMDAwMDE2ODE4OTM3MzJ9.hQpNKIj4SR7Gm9waUMn7hzwKQyqwKrniL_qSW7SxrjM"
      },
      "res204": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "No content"
          }
        }
      },
      "error400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Bad request"
          }
        }
      },
      "error401": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "<Помилка від Joi або іншої бібліотеки валідації>"
          }
        }
      },
      "error404": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Not found"
          }
        }
      },
      "error409": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Email in use"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
